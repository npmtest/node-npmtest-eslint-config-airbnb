{"/home/travis/build/npmtest/node-npmtest-eslint-config-airbnb/test.js":"/* istanbul instrument in package npmtest_eslint_config_airbnb */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-eslint-config-airbnb/lib.npmtest_eslint_config_airbnb.js":"/* istanbul instrument in package npmtest_eslint_config_airbnb */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_eslint_config_airbnb = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_eslint_config_airbnb = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-eslint-config-airbnb/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-eslint-config-airbnb && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_eslint_config_airbnb */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_eslint_config_airbnb\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_eslint_config_airbnb.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_eslint_config_airbnb.rollup.js'] =\n            local.assetsDict['/assets.npmtest_eslint_config_airbnb.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_eslint_config_airbnb.__dirname + '/lib.npmtest_eslint_config_airbnb.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-eslint-config-airbnb/node_modules/eslint-config-airbnb/index.js":"module.exports = {\n  extends: [\n    'eslint-config-airbnb-base',\n    'eslint-config-airbnb-base/rules/strict',\n    './rules/react',\n    './rules/react-a11y',\n  ].map(require.resolve),\n  rules: {}\n};\n","/home/travis/build/npmtest/node-npmtest-eslint-config-airbnb/node_modules/eslint-config-airbnb/base.js":"module.exports = {\n  extends: ['eslint-config-airbnb-base'].map(require.resolve),\n  rules: {},\n};\n","/home/travis/build/npmtest/node-npmtest-eslint-config-airbnb/node_modules/eslint-config-airbnb/legacy.js":"module.exports = {\n  extends: ['eslint-config-airbnb-base/legacy'].map(require.resolve),\n  rules: {},\n};\n","/home/travis/build/npmtest/node-npmtest-eslint-config-airbnb/node_modules/eslint-config-airbnb/rules/react-a11y.js":"module.exports = {\n  plugins: [\n    'jsx-a11y',\n    'react'\n  ],\n  ecmaFeatures: {\n    jsx: true\n  },\n  rules: {\n    // Enforce that anchors have content\n    // https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-has-content.md\n    'jsx-a11y/anchor-has-content': ['error', { components: [''] }],\n\n    // Require ARIA roles to be valid and non-abstract\n    // https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/aria-role.md\n    'jsx-a11y/aria-role': 'error',\n\n    // Enforce all aria-* props are valid.\n    // https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/aria-props.md\n    'jsx-a11y/aria-props': 'error',\n\n    // Enforce ARIA state and property values are valid.\n    // https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/aria-proptypes.md\n    'jsx-a11y/aria-proptypes': 'error',\n\n    // Enforce that elements that do not support ARIA roles, states, and\n    // properties do not have those attributes.\n    // https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/aria-unsupported-elements.md\n    'jsx-a11y/aria-unsupported-elements': 'error',\n\n    // disallow href \"#\"\n    // https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/href-no-hash.md\n    'jsx-a11y/href-no-hash': ['error', { components: ['a'] }],\n\n    // Require <img> to have a non-empty `alt` prop, or role=\"presentation\"\n    // https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/img-has-alt.md\n    'jsx-a11y/img-has-alt': 'error',\n\n    // Prevent img alt text from containing redundant words like \"image\", \"picture\", or \"photo\"\n    // https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/img-redundant-alt.md\n    'jsx-a11y/img-redundant-alt': 'error',\n\n    // require that JSX labels use \"htmlFor\"\n    // https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/label-has-for.md\n    'jsx-a11y/label-has-for': ['error', { components: ['label'] }],\n\n    // require that mouseover/out come with focus/blur, for keyboard-only users\n    // TODO: evaluate\n    // https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/mouse-events-have-key-events.md\n    'jsx-a11y/mouse-events-have-key-events': 'off',\n\n    // Prevent use of `accessKey`\n    // https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-access-key.md\n    'jsx-a11y/no-access-key': 'error',\n\n    // require onBlur instead of onChange\n    // https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-onchange.md\n    'jsx-a11y/no-onchange': 'off',\n\n    // Enforce that elements with onClick handlers must be focusable.\n    // TODO: evaluate\n    // https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/onclick-has-focus.md\n    'jsx-a11y/onclick-has-focus': 'off',\n\n    // require things with onClick to have an aria role\n    // https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/onclick-has-role.md\n    'jsx-a11y/onclick-has-role': 'off',\n\n    // Enforce that elements with ARIA roles must have all required attributes\n    // for that role.\n    // https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/role-has-required-aria-props.md\n    'jsx-a11y/role-has-required-aria-props': 'error',\n\n    // Enforce that elements with explicit or implicit roles defined contain\n    // only aria-* properties supported by that role.\n    // https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/role-supports-aria-props.md\n    'jsx-a11y/role-supports-aria-props': 'error',\n\n    // Enforce tabIndex value is not greater than zero.\n    // https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/tabindex-no-positive.md\n    'jsx-a11y/tabindex-no-positive': 'error',\n\n    // ensure <hX> tags have content and are not aria-hidden\n    // https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/heading-has-content.md\n    'jsx-a11y/heading-has-content': ['error', { components: [''] }],\n\n    // require HTML elements to have a \"lang\" prop\n    // https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/html-has-lang.md\n    'jsx-a11y/html-has-lang': 'error',\n\n    // require HTML element's lang prop to be valid\n    // https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/lang.md\n    'jsx-a11y/lang': 'error',\n\n    // only allow <th> to have the \"scope\" attr\n    // https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/scope.md\n    'jsx-a11y/scope': 'error',\n\n    // require onClick be accompanied by onKeyUp/onKeyDown/onKeyPress\n    // https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/click-events-have-key-events.md\n    // TODO: enable?\n    'jsx-a11y/click-events-have-key-events': 'off',\n\n    // Enforce that DOM elements without semantic behavior not have interaction handlers\n    // https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-static-element-interactions.md\n    'jsx-a11y/no-static-element-interactions': 'error',\n  },\n};\n","/home/travis/build/npmtest/node-npmtest-eslint-config-airbnb/node_modules/eslint-config-airbnb/rules/react.js":"module.exports = {\n  plugins: [\n    'react',\n  ],\n  parserOptions: {\n    ecmaFeatures: {\n      jsx: true,\n    },\n  },\n  ecmaFeatures: {\n    jsx: true,\n  },\n\n  // View link below for react rules documentation\n  // https://github.com/yannickcr/eslint-plugin-react#list-of-supported-rules\n  rules: {\n    // Specify whether double or single quotes should be used in JSX attributes\n    // http://eslint.org/docs/rules/jsx-quotes\n    'jsx-quotes': ['error', 'prefer-double'],\n\n    'class-methods-use-this': ['error', {\n      exceptMethods: [\n        'render',\n        'getInitialState',\n        'getDefaultProps',\n        'getChildContext',\n        'componentWillMount',\n        'componentDidMount',\n        'componentWillReceiveProps',\n        'shouldComponentUpdate',\n        'componentWillUpdate',\n        'componentDidUpdate',\n        'componentWillUnmount',\n      ],\n    }],\n\n    // Prevent missing displayName in a React component definition\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/display-name.md\n    'react/display-name': ['off', { ignoreTranspilerName: false }],\n\n    // Forbid certain propTypes (any, array, object)\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/forbid-prop-types.md\n    'react/forbid-prop-types': ['error', { forbid: ['any', 'array', 'object'] }],\n\n    // Enforce boolean attributes notation in JSX\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-boolean-value.md\n    'react/jsx-boolean-value': ['error', 'never'],\n\n    // Validate closing bracket location in JSX\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-closing-bracket-location.md\n    'react/jsx-closing-bracket-location': ['error', 'line-aligned'],\n\n    // Enforce or disallow spaces inside of curly braces in JSX attributes\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-curly-spacing.md\n    'react/jsx-curly-spacing': ['error', 'never', { allowMultiline: true }],\n\n    // Enforce event handler naming conventions in JSX\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-handler-names.md\n    'react/jsx-handler-names': ['off', {\n      eventHandlerPrefix: 'handle',\n      eventHandlerPropPrefix: 'on',\n    }],\n\n    // Validate props indentation in JSX\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-indent-props.md\n    'react/jsx-indent-props': ['error', 2],\n\n    // Validate JSX has key prop when in array or iterator\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-key.md\n    'react/jsx-key': 'off',\n\n    // Limit maximum of props on a single line in JSX\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-max-props-per-line.md\n    'react/jsx-max-props-per-line': ['off', { maximum: 1 }],\n\n    // Prevent usage of .bind() in JSX props\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-no-bind.md\n    'react/jsx-no-bind': ['error', {\n      ignoreRefs: true,\n      allowArrowFunctions: true,\n      allowBind: false,\n    }],\n\n    // Prevent duplicate props in JSX\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-no-duplicate-props.md\n    'react/jsx-no-duplicate-props': ['error', { ignoreCase: true }],\n\n    // Prevent usage of unwrapped JSX strings\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-no-literals.md\n    'react/jsx-no-literals': 'off',\n\n    // Disallow undeclared variables in JSX\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-no-undef.md\n    'react/jsx-no-undef': 'error',\n\n    // Enforce PascalCase for user-defined JSX components\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-pascal-case.md\n    'react/jsx-pascal-case': ['error', {\n      allowAllCaps: true,\n      ignore: [],\n    }],\n\n    // Enforce propTypes declarations alphabetical sorting\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/sort-prop-types.md\n    'react/sort-prop-types': ['off', {\n      ignoreCase: true,\n      callbacksLast: false,\n      requiredFirst: false,\n    }],\n\n    // Deprecated in favor of react/jsx-sort-props\n    'react/jsx-sort-prop-types': 'off',\n\n    // Enforce props alphabetical sorting\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-sort-props.md\n    'react/jsx-sort-props': ['off', {\n      ignoreCase: true,\n      callbacksLast: false,\n      shorthandFirst: false,\n      shorthandLast: false,\n    }],\n\n    // Prevent React to be incorrectly marked as unused\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-uses-react.md\n    'react/jsx-uses-react': ['error'],\n\n    // Prevent variables used in JSX to be incorrectly marked as unused\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-uses-vars.md\n    'react/jsx-uses-vars': 'error',\n\n    // Prevent usage of dangerous JSX properties\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-danger.md\n    'react/no-danger': 'warn',\n\n    // Prevent usage of deprecated methods\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-deprecated.md\n    'react/no-deprecated': ['error'],\n\n    // Prevent usage of setState in componentDidMount\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-did-mount-set-state.md\n    'react/no-did-mount-set-state': ['error'],\n\n    // Prevent usage of setState in componentDidUpdate\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-did-update-set-state.md\n    'react/no-did-update-set-state': ['error'],\n\n    // Prevent direct mutation of this.state\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-direct-mutation-state.md\n    'react/no-direct-mutation-state': 'off',\n\n    // Prevent usage of isMounted\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-is-mounted.md\n    'react/no-is-mounted': 'error',\n\n    // Prevent multiple component definition per file\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-multi-comp.md\n    'react/no-multi-comp': ['error', { ignoreStateless: true }],\n\n    // Prevent usage of setState\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-set-state.md\n    'react/no-set-state': 'off',\n\n    // Prevent using string references\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-string-refs.md\n    'react/no-string-refs': 'error',\n\n    // Prevent usage of unknown DOM property\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-unknown-property.md\n    'react/no-unknown-property': 'error',\n\n    // Require ES6 class declarations over React.createClass\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/prefer-es6-class.md\n    'react/prefer-es6-class': ['error', 'always'],\n\n    // Require stateless functions when not using lifecycle methods, setState or ref\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/prefer-stateless-function.md\n    'react/prefer-stateless-function': 'error',\n\n    // Prevent missing props validation in a React component definition\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/prop-types.md\n    'react/prop-types': ['error', { ignore: [], customValidators: [] }],\n\n    // Prevent missing React when using JSX\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/react-in-jsx-scope.md\n    'react/react-in-jsx-scope': 'error',\n\n    // Restrict file extensions that may be required\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/require-extension.md\n    // deprecated in favor of import/extensions\n    'react/require-extension': ['off', { extensions: ['.jsx', '.js'] }],\n\n    // Require render() methods to return something\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/require-render-return.md\n    'react/require-render-return': 'error',\n\n    // Prevent extra closing tags for components without children\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/self-closing-comp.md\n    'react/self-closing-comp': 'error',\n\n    // Enforce spaces before the closing bracket of self-closing JSX elements\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-space-before-closing.md\n    'react/jsx-space-before-closing': ['error', 'always'],\n\n    // Enforce component methods order\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/sort-comp.md\n    'react/sort-comp': ['error', {\n      order: [\n        'static-methods',\n        'lifecycle',\n        '/^on.+$/',\n        '/^(get|set)(?!(InitialState$|DefaultProps$|ChildContext$)).+$/',\n        'everything-else',\n        '/^render.+$/',\n        'render'\n      ],\n    }],\n\n    // Prevent missing parentheses around multilines JSX\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-wrap-multilines.md\n    'react/jsx-wrap-multilines': ['error', {\n      declaration: true,\n      assignment: true,\n      return: true\n    }],\n    'react/wrap-multilines': 'off', // deprecated version\n\n    // Require that the first prop in a JSX element be on a new line when the element is multiline\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-first-prop-new-line.md\n    'react/jsx-first-prop-new-line': ['error', 'multiline'],\n\n    // Enforce spacing around jsx equals signs\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-equals-spacing.md\n    'react/jsx-equals-spacing': ['error', 'never'],\n\n    // Enforce JSX indentation\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-indent.md\n    'react/jsx-indent': ['error', 2],\n\n    // Disallow target=\"_blank\" on links\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-no-target-blank.md\n    'react/jsx-no-target-blank': 'error',\n\n    // only .jsx files may have JSX\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-filename-extension.md\n    'react/jsx-filename-extension': ['error', { extensions: ['.jsx'] }],\n\n    // prevent accidental JS comments from being injected into JSX as text\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-no-comment-textnodes.md\n    'react/jsx-no-comment-textnodes': 'error',\n    'react/no-comment-textnodes': 'off', // deprecated version\n\n    // disallow using React.render/ReactDOM.render's return value\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-render-return-value.md\n    'react/no-render-return-value': 'error',\n\n    // require a shouldComponentUpdate method, or PureRenderMixin\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/require-optimization.md\n    'react/require-optimization': ['off', { allowDecorators: [] }],\n\n    // warn against using findDOMNode()\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-find-dom-node.md\n    'react/no-find-dom-node': 'error',\n\n    // Forbid certain props on Components\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/forbid-component-props.md\n    'react/forbid-component-props': ['off', { forbid: [] }],\n\n    // Prevent problem with children and props.dangerouslySetInnerHTML\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-danger-with-children.md\n    'react/no-danger-with-children': 'error',\n\n    // Prevent unused propType definitions\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-unused-prop-types.md\n    'react/no-unused-prop-types': ['error', {\n      customValidators: [\n      ],\n      skipShapeProps: true,\n    }],\n\n    // Require style prop value be an object or var\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/style-prop-object.md\n    'react/style-prop-object': 'error',\n\n    // Prevent invalid characters from appearing in markup\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-unescaped-entities.md\n    'react/no-unescaped-entities': 'error',\n\n    // Prevent passing of children as props\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-children-prop.md\n    'react/no-children-prop': 'error',\n\n    // Validate whitespace in and around the JSX opening and closing brackets\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-tag-spacing.md\n    'react/jsx-tag-spacing': ['error', {\n      closingSlash: 'never',\n      beforeSelfClosing: 'always',\n      afterOpening: 'never'\n    }],\n\n    // Prevent usage of Array index in keys\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-array-index-key.md\n    'react/no-array-index-key': 'error',\n\n    // Enforce a defaultProps definition for every prop that is not a required prop\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/require-default-props.md\n    'react/require-default-props': 'error',\n  },\n\n  settings: {\n    'import/resolver': {\n      node: {\n        extensions: ['.js', '.jsx', '.json']\n      }\n    },\n    react: {\n      pragma: 'React',\n      version: '0.14'\n    },\n  }\n};\n"}